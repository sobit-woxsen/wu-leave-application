generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model StudentData {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  DOB                 DateTime           @db.Date
  academicYear        String
  admissionNumber     String
  admissionStatus     String
  country             String
  degree              String
  fatherEmail         String?
  fatherMobileNumber  BigInt?
  fatherName          String
  fullName            String
  gender              String
  motherMobileNumber  BigInt?
  motherName          String
  motherTongue        String
  program             String
  religion            String?
  rollNumber          String
  section             String
  semester            String
  sessionAcademicYear String
  smsPhoneNumber      BigInt?
  studentEmail        String             @unique
  department          Department
  LeaveApplication    LeaveApplication[]
  password            String?
  refreshToken        String?
  isRegistered        Boolean?           @default(false)
  role                Role               @default(USER)
  createdAt           DateTime           @default(now()) @db.Date
  updatedAt           DateTime           @updatedAt @db.Date
}

enum ApplicationStatus {
  ACCEPTED
  REJECTED
  PENDING
}

model LeaveApplication {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  startDate    DateTime
  endDate      DateTime
  totalLeaves  Int
  leaveReason  String
  leaveType    String
  documentUrl  String?
  videoUrl     String?
  studentEmail String?
  department   Department
  status       ApplicationStatus @default(PENDING)
  studentId    String?           @db.ObjectId
  StudentData  StudentData?      @relation(fields: [studentId], references: [id])
  createdAt    DateTime          @default(now()) @db.Date
  updatedAt    DateTime          @updatedAt @db.Date
}

model OTPVerify {
  id        String   @id @map("_id")
  createdAt DateTime @db.Date
  expiresAt DateTime @db.Date
  otp       BigInt
  studentId String   @unique @db.ObjectId
}

enum Role {
  ADMIN
  USER
}

enum Department {
  BBA
  BCOM
}

model Admin {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  adminEmail   String      @unique
  password     String
  refreshToken String?
  role         Role        @default(ADMIN)
  department   Department?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@map("AdminSchema")
}
