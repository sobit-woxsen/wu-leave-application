datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model BBAStudentData {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  degree              String
  admissionNumber     String
  fullName            String
  rollNumber          String
  academicYear        String
  sessionAcademicYear String
  program             String
  semester            String
  section             String
  DOB                 DateTime
  gender              String
  citizen             String?
  motherTongue        String?
  religion            String?
  smsPhoneNumber      Int?
  studentEmail        String
  country             String
  fatherName          String?
  fatherMobileNumber  String?
  fatherEmail         String?
  motherName          String?
  motherMobileNumber  Int?
  admissionStatus     String
}

model BCOMStudentData {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  degree              String
  admissionNumber     String
  fullName            String
  rollNumber          String
  academicYear        String
  sessionAcademicYear String
  program             String
  semester            String
  section             String
  DOB                 DateTime
  gender              String
  citizen             String?
  motherTongue        String?
  religion            String?
  smsPhoneNumber      Int?
  studentEmail        String
  country             String
  fatherName          String?
  fatherMobileNumber  Int?
  fatherEmail         String?
  motherName          String?
  motherMobileNumber  Int?
  admissionStatus     String
}

model LeaveApplication {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  studentEmail   String
  studentId      String
  startDate      DateTime
  endDate        DateTime
  reasonForLeave String
  documentUrl    String?
  videoUrl       String?
  status         Status   @default(PENDING)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  User           User?    @relation(fields: [userId], references: [id])
  userId         String?  @db.ObjectId

  @@map("LeaveApplicationSchema")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  studentEmail String
  studentId    String
  password     String
  role         Role               @default(USER)
  applications LeaveApplication[]
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt

  @@map("UserSchema")
}

enum Role {
  ADMIN
  USER
}

model Admin {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  adminEmail String
  adminId    String
  password   String
  role       Role       @default(ADMIN)
  department Department
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@map("AdminSchema")
}

enum Department {
  BBA
  BCOM
}
